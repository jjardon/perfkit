<?xml version="1.0" ?>
<node>
    <interface name="org.perfkit.Agent.Manager">
        <annotation name="org.freedesktop.DBus.GLib.CSymbol" value="pka_dbus_manager"/>

        <!--
            Manager::Ping()

                A dummy method for clients to test connectivity to the agent.

            Returns: The current time on the agent.
        -->
        <method name="Ping">
            <arg name="time" type="s" direction="out"/>
        </method>

        <!--
            Manager::CreateChannel()
            @pid: An existing process id to attach to (or 0 for none).
            @target: The path to an executable (or NULL for none).
            @args: Array of arguments for @target
            @env: Array of KEY=VALUE environment variables
            @working_dir: working directory for @target.

                Creates a new PkaChannel.

            Returns: A path to the newly created channel.
        -->
        <method name="CreateChannel">
            <arg name="pid" type="u" direction="in"/>
            <arg name="target" type="s" direction="in"/>
            <arg name="args" type="as" direction="in"/>
            <arg name="env" type="as" direction="in"/>
            <arg name="working_dir" type="s" direction="in"/>
            <arg name="channel" type="o" direction="out"/>
        </method>

        <!--
            Manager::CreateSubscription()
            @delivery_address: A private DBus address to connect and deliver manifests and samples.
            @delivery_path: A path to the service on private DBus.
            @channel: A path to a PkaChannel.
            @buffer_size: Buffer size in bytes. 0 for no size-based buffer.
            @buffer_timeout: Timeout in milliseconds that buffer should flush.
              Zero for no timeout-based buffer flushing.
            @encoder_info: A path to a PkaEncoderInfo.

                Creates a new subscription using the parameters.

            Returns: A path to a subscription.
        -->
        <method name="CreateSubscription">
            <arg name="delivery_address" type="s" direction="in"/>
            <arg name="delivery_path" type="s" direction="in"/>
            <arg name="channel" type="o" direction="in"/>
            <arg name="buffer_size" type="u" direction="in"/>
            <arg name="buffer_timeout" type="u" direction="in"/>
            <arg name="encoder_info" type="o" direction="in"/>
            <arg name="subscription" type="o" direction="out"/>
        </method>

        <!--
            Manager::GetProcesses()

                Retrieves a list of processes on the system that are available for
                profiling.  The list element is a tuple of process information
                containing (Process ID, Name, Command Line Arguments, Icon Name).

            Returns: An array of process tuples.
        -->
        <method name="GetProcesses">
            <arg name="processes" type="a(usss)" direction="out"/>
        </method>

        <!--
            Manager::GetChannels

                Retrieves a list of available channels.

            Returns: An array of object paths.
        -->
        <method name="GetChannels">
            <arg name="channels" type="as" direction="out"/>
        </method>

        <!--
            Manager::GetVersion()

                Retrieves the version of the agent.

            Returns: A string containing the version.
        -->
        <method name="GetVersion">
            <arg name="version" type="s" direction="out"/>
        </method>

        <!--
            Manager::RemoveChannel()

                Removes a channel from the pipeline.

            Returns: None.
        -->
        <method name="RemoveChannel">
            <arg name="path" type="o" direction="in"/>
        </method>

        <!--
            Manager::GetSourcePlugins()

                Retrieves the list of source plugins.

            Returns: A list of source info uris.
        -->
        <method name="GetSourcePlugins">
            <arg name="paths" type="as" direction="out"/>
        </method>

    </interface>
</node>
